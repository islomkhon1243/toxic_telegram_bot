import google.generativeai as genai
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext
import random
from background import keep_alive

# üîë API-–∫–ª—é—á–∏
GEMINI_API_KEY = "AIzaSyAaPCjYO4xVOcQx8_PgvH1gX7bSRWPfr3c"
TELEGRAM_BOT_TOKEN = "7760792899:AAG_KTwM_SXQQO6OINo7nkvv4goriB-RasI"

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Gemini API
client = genai.Client(api_key=GEMINI_API_KEY)


async def toxic_funny_response(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /toxic ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–∫—Å–∏—á–Ω–æ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    chat = update.message.chat
    user_message = update.message.text

    prompt = f"""
    –û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ, –Ω–∞–≥–ª–æ –∏ —Å –º–∞—Ç–∞–º–∏. –ë—É–¥—å —Ç–æ–∫—Å–∏—á–Ω—ã–º, –≥–æ–≤–æ—Ä–∏ —Ç–∞–∫, –±—É–¥—Ç–æ —Ç–µ–±—è –≤—Å—ë —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç, –Ω–æ —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –æ—Ç–≤–µ—á–∞–µ—à—å. 
    –ò—Å–ø–æ–ª—å–∑—É–π —Å–∞—Ä–∫–∞–∑–º, —Ä–µ–∑–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ —á—ë—Ä–Ω—ã–π —é–º–æ—Ä. –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ —Ç—É–ø–∏—Ç ‚Äî –ø–æ–¥–Ω–∞—á–∏–≤–∞–π –µ–≥–æ. –ï—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç –æ—á–µ–≤–∏–¥–Ω–æ–µ ‚Äî –≤—ã—Å–º–µ–∏–≤–∞–π.
    –û—Ç–≤–µ—á–∞–π —Ç–∞–∫, –±—É–¥—Ç–æ —Ç–µ–±–µ –≤–æ–æ–±—â–µ –ø–ª–µ–≤–∞—Ç—å, –Ω–æ —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–µ–ª–∞–µ—à—å —ç—Ç–æ —Ä–∞–¥–∏ –∑–∞–±–∞–≤—ã.

    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_message}
    """

    try:
        response = client.models.generate_content(model="gemini-2.0-flash",
                                                  contents=prompt)
        toxic_reply = response.text if hasattr(
            response, "text") else "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –î–∞–∂–µ –ò–ò –∑–∞—Å–∫—É—á–∞–ª."
    except Exception as e:
        toxic_reply = f"–û—à–∏–±–∫–∞ –ò–ò: {str(e)}"

    await update.message.reply_text(toxic_reply)


def main():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞"""
    app = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(CommandHandler("toxic", toxic_funny_response))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω... –í–≤–æ–¥–∏ /toxic!")
    app.run_polling()


keep_alive()
if __name__ == "__main__":
    main()
